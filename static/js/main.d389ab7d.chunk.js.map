{"version":3,"sources":["ui/NavBar.jsx","ui/HomeCard.jsx","container/Home.jsx","App.js","container/BackLog.jsx","ui/releaseFrom.js","container/Releases.jsx","container/Sprints.jsx","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","es","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","HomeCard","props","style","width","src","alt","title","text","onClick","action","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","HomeCardReleases","hashHistory","push","HomeCardSprits","HomeCardBacklog","state","padding","ui_HomeCard","Component","App","ui_NavBar","children","BackLog","ReleaseForm","_ref","_name","_data","submitHandler","onSubmit","e","console","log","name","value","data","for","ref","input","class","Releases","remove","arrayAtual","releases","splice","setState","handleSubimit","bind","assertThisInitialized","preventDefault","myReleases","length","releaseName","releaseData","concat","state1","_this2","releaseFrom","scope","map","release","index","key","Sprints","Boolean","window","location","hostname","match","ReactDOM","render","history","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d389ab7d.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router'\n\nconst NavBar = () => {\n\n    return (\n\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to='/' className=\"navbar-brand\">Navbar</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item active\">\n                        <Link to='/Releases' className=\"nav-link\">Releases</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to='/BackLog' className=\"nav-link\">BackLog</Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link to='/Sprints' className=\"nav-link\">Sprints</Link>\n                    </li>\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n\n\n    )\n}\n\nexport default NavBar;","import React from 'react'\n\nconst HomeCard = (props) => (\n    <div className=\"col-12 col-sm-4\">\n        <div className=\"card\" style={{width: '18rem'}}>\n            <img className=\"card-img-top\" src=\"...\" alt=\"Card image cap\" />\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.title}</h5>\n                <p className=\"card-text\">{props.text}</p>\n                <button className=\"btn btn-primary\" onClick={props.action}>send button</button>\n            </div>\n        </div>\n    </div>\n\n\n)\nexport default HomeCard","import React, { Component } from 'react'\nimport HomeCard from '../ui/HomeCard';\nimport {hashHistory} from 'react-router';\n\nexport default class Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            title: 'backlog',\n            text: 'testeando state',\n            action: () => hashHistory.push('/BackLog')\n        }\n    }\n   \n\n    HomeCardReleases = {\n        title: 'releases',\n        text: 'manager release',\n        action: () => hashHistory.push('/releases')\n    }\n    HomeCardSprits = {\n        title: 'sprits',\n        text: 'manager sprits',\n        action: () => hashHistory.push('/Sprints')\n    }\n    HomeCardBacklog = {\n        title: 'backlog',\n        text: 'manager backlog',\n        action: () => hashHistory.push('/BackLog')\n    }\n\n\n    render() {    \n        return (\n            <div className=\"container text-center\" style={{ padding: '10px' }}>\n                <div className=\"row\">\n                    <HomeCard title={this.HomeCardReleases.title}\n                        text={this.HomeCardReleases.text}\n                        action={this.HomeCardReleases.action}\n                    />\n                    <HomeCard  {...this.HomeCardSprits} />\n                    <HomeCard  {...this.state} />\n                </div>\n            </div>\n        )\n\n    }\n}","import React, { Component } from 'react';\nimport NavBar from './ui/NavBar'\nimport Home from './container/Home'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <NavBar />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\n\nexport default class BackLog extends Component {\n \n    render() {    \n        return (\n          <h1>BackLog</h1>\n        )\n\n    }\n}","import React from 'react'\n\nconst ReleaseForm = ({submitHandler}) => {\n  let _name, _data;\n  const handleSubmit = (e) => {\n    console.log('teste');\n    console.log(_name);\n    console.log(_data);\n    submitHandler(e,{\n      name: _name.value,\n      data: _data.value });\n    \n\n  }\n  return (\n\n    <form onSubmit={handleSubmit} className=\"form-inline\">\n      <label className=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"text\" ref={input => _name = input} className=\"form-control mb-2 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"relese name\" />\n\n      <label className=\"sr-only\" for=\"inlineFormInputGroupUsername2\">Username</label>\n      <div className=\"input-group mb-2 mr-sm-2\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">@</div>\n        </div>\n        <input type=\"text\"  ref={input => _data = input} className=\"form-control\" id=\"inlineFormInputGroupUsername2\" placeholder=\"Username\" />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mb-2\">Submit</button>\n    </form>\n  )\n\n} \n\nexport default ReleaseForm","import React, { Component } from 'react'\nimport ReleaseForm from '../ui/releaseFrom'\nexport default class Releases extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubimit = this.handleSubimit.bind(this);\n        this.remove = this.remove.bind(this);\n        this.state = ({\n            releases: []\n        })\n    }\n\n    handleSubimit(e,{name, data}){\n        e.preventDefault();\n\n        var state =  this.state\n        var myReleases = {\n            id: state.releases.length  + 1,\n            releaseName: name,\n            releaseData: data,\n        }\n\n        this.setState({releases: state.releases.concat(myReleases)})\n         var state1 = this.state;\n        console.log(state1);\n        \n    }\n    remove = (e) => {\n       /* var myReleases = this.state.releases;\n        myReleases.splice(e, 1)\n        this.setState({releases: myReleases});\n        */\n       let arrayAtual = this.state.releases;\n        console.log(e);\n        \n        arrayAtual.splice(e,1 );\n        console.log(arrayAtual);\n        this.setState({releases: arrayAtual})\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <ReleaseForm submitHandler={this.handleSubimit}/>\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">First</th>\n                            <th scope=\"col\">Deletar</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.releases.map((release, index) => {\n                            return (\n                                <tr key={release.id}>\n                                    <th   scope=\"row\">{release.id}</th>\n                                    <td>{release.releaseData}</td>\n                                    <td>{release.releaseName}</td>\n                                    <td><button type=\"button\" onClick={()=> this.remove(index)} className=\"btn btn-outline-primary\">Primary</button></td>\n\n                                </tr>\n                            )\n                        })}\n\n                    </tbody>\n                </table>\n            </div>\n        )\n\n    }\n}","import React, { Component } from 'react'\n\nexport default class Sprints extends Component {\n \n    render() {    \n        return (\n          <h1>Sprints</h1>\n        )\n\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport BackLog from './container/BackLog';\nimport Releases from './container/Releases';\nimport Sprints from './container/Sprints';\nimport Home from './container/Home';\n\nimport * as serviceWorker from './serviceWorker';\n import { Router, Route, IndexRoute, hashHistory} from 'react-router';\nReactDOM.render(\n    <Router history={hashHistory}>\n      <Route path='/' component={App} >\n      <IndexRoute component={Home}/>\n      <Route path='/BackLog' component={BackLog} />\n      <Route path='/Releases' component={Releases} />\n      <Route path='/Sprints' component={Sprints} />\n      </Route>\n    </Router>\n    \n    \n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}